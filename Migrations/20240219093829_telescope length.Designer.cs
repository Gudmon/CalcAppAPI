// <auto-generated />
using System;
using CalcAppAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CalcAppAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240219093829_telescope length")]
    partial class telescopelength
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BrakeTrailer", b =>
                {
                    b.Property<int>("BrakeId")
                        .HasColumnType("int");

                    b.Property<int>("TrailerId")
                        .HasColumnType("int");

                    b.HasKey("BrakeId", "TrailerId");

                    b.HasIndex("TrailerId");

                    b.ToTable("BrakeTrailer", (string)null);

                    b.HasData(
                        new
                        {
                            BrakeId = 1,
                            TrailerId = 1
                        },
                        new
                        {
                            BrakeId = 2,
                            TrailerId = 1
                        },
                        new
                        {
                            BrakeId = 3,
                            TrailerId = 1
                        },
                        new
                        {
                            BrakeId = 4,
                            TrailerId = 1
                        },
                        new
                        {
                            BrakeId = 5,
                            TrailerId = 1
                        },
                        new
                        {
                            BrakeId = 6,
                            TrailerId = 1
                        },
                        new
                        {
                            BrakeId = 7,
                            TrailerId = 1
                        },
                        new
                        {
                            BrakeId = 1,
                            TrailerId = 2
                        },
                        new
                        {
                            BrakeId = 2,
                            TrailerId = 2
                        },
                        new
                        {
                            BrakeId = 3,
                            TrailerId = 2
                        },
                        new
                        {
                            BrakeId = 4,
                            TrailerId = 2
                        },
                        new
                        {
                            BrakeId = 5,
                            TrailerId = 2
                        },
                        new
                        {
                            BrakeId = 6,
                            TrailerId = 2
                        },
                        new
                        {
                            BrakeId = 7,
                            TrailerId = 2
                        },
                        new
                        {
                            BrakeId = 1,
                            TrailerId = 3
                        },
                        new
                        {
                            BrakeId = 2,
                            TrailerId = 3
                        },
                        new
                        {
                            BrakeId = 3,
                            TrailerId = 3
                        },
                        new
                        {
                            BrakeId = 4,
                            TrailerId = 3
                        },
                        new
                        {
                            BrakeId = 5,
                            TrailerId = 3
                        },
                        new
                        {
                            BrakeId = 8,
                            TrailerId = 3
                        },
                        new
                        {
                            BrakeId = 9,
                            TrailerId = 3
                        },
                        new
                        {
                            BrakeId = 1,
                            TrailerId = 4
                        },
                        new
                        {
                            BrakeId = 10,
                            TrailerId = 4
                        },
                        new
                        {
                            BrakeId = 11,
                            TrailerId = 4
                        },
                        new
                        {
                            BrakeId = 12,
                            TrailerId = 4
                        },
                        new
                        {
                            BrakeId = 13,
                            TrailerId = 4
                        },
                        new
                        {
                            BrakeId = 14,
                            TrailerId = 4
                        },
                        new
                        {
                            BrakeId = 15,
                            TrailerId = 4
                        },
                        new
                        {
                            BrakeId = 1,
                            TrailerId = 5
                        },
                        new
                        {
                            BrakeId = 2,
                            TrailerId = 5
                        },
                        new
                        {
                            BrakeId = 3,
                            TrailerId = 5
                        },
                        new
                        {
                            BrakeId = 4,
                            TrailerId = 5
                        },
                        new
                        {
                            BrakeId = 5,
                            TrailerId = 5
                        },
                        new
                        {
                            BrakeId = 6,
                            TrailerId = 5
                        },
                        new
                        {
                            BrakeId = 7,
                            TrailerId = 5
                        },
                        new
                        {
                            BrakeId = 1,
                            TrailerId = 6
                        },
                        new
                        {
                            BrakeId = 2,
                            TrailerId = 6
                        },
                        new
                        {
                            BrakeId = 3,
                            TrailerId = 6
                        },
                        new
                        {
                            BrakeId = 4,
                            TrailerId = 6
                        },
                        new
                        {
                            BrakeId = 5,
                            TrailerId = 6
                        },
                        new
                        {
                            BrakeId = 8,
                            TrailerId = 6
                        },
                        new
                        {
                            BrakeId = 9,
                            TrailerId = 6
                        },
                        new
                        {
                            BrakeId = 1,
                            TrailerId = 7
                        },
                        new
                        {
                            BrakeId = 10,
                            TrailerId = 7
                        },
                        new
                        {
                            BrakeId = 11,
                            TrailerId = 7
                        },
                        new
                        {
                            BrakeId = 12,
                            TrailerId = 7
                        },
                        new
                        {
                            BrakeId = 13,
                            TrailerId = 7
                        },
                        new
                        {
                            BrakeId = 14,
                            TrailerId = 7
                        },
                        new
                        {
                            BrakeId = 15,
                            TrailerId = 7
                        },
                        new
                        {
                            BrakeId = 1,
                            TrailerId = 8
                        },
                        new
                        {
                            BrakeId = 10,
                            TrailerId = 8
                        },
                        new
                        {
                            BrakeId = 16,
                            TrailerId = 8
                        },
                        new
                        {
                            BrakeId = 12,
                            TrailerId = 8
                        },
                        new
                        {
                            BrakeId = 17,
                            TrailerId = 8
                        },
                        new
                        {
                            BrakeId = 18,
                            TrailerId = 8
                        },
                        new
                        {
                            BrakeId = 19,
                            TrailerId = 8
                        },
                        new
                        {
                            BrakeId = 1,
                            TrailerId = 9
                        },
                        new
                        {
                            BrakeId = 10,
                            TrailerId = 9
                        },
                        new
                        {
                            BrakeId = 11,
                            TrailerId = 9
                        },
                        new
                        {
                            BrakeId = 12,
                            TrailerId = 9
                        },
                        new
                        {
                            BrakeId = 13,
                            TrailerId = 9
                        },
                        new
                        {
                            BrakeId = 14,
                            TrailerId = 9
                        },
                        new
                        {
                            BrakeId = 15,
                            TrailerId = 9
                        },
                        new
                        {
                            BrakeId = 1,
                            TrailerId = 10
                        },
                        new
                        {
                            BrakeId = 10,
                            TrailerId = 10
                        },
                        new
                        {
                            BrakeId = 16,
                            TrailerId = 10
                        },
                        new
                        {
                            BrakeId = 12,
                            TrailerId = 10
                        },
                        new
                        {
                            BrakeId = 17,
                            TrailerId = 10
                        },
                        new
                        {
                            BrakeId = 18,
                            TrailerId = 10
                        },
                        new
                        {
                            BrakeId = 19,
                            TrailerId = 10
                        },
                        new
                        {
                            BrakeId = 1,
                            TrailerId = 11
                        },
                        new
                        {
                            BrakeId = 10,
                            TrailerId = 11
                        },
                        new
                        {
                            BrakeId = 11,
                            TrailerId = 11
                        },
                        new
                        {
                            BrakeId = 12,
                            TrailerId = 11
                        },
                        new
                        {
                            BrakeId = 13,
                            TrailerId = 11
                        },
                        new
                        {
                            BrakeId = 14,
                            TrailerId = 11
                        },
                        new
                        {
                            BrakeId = 15,
                            TrailerId = 11
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Crane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrutLiftingTorque190Bar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrutLiftingTorque215Bar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrutLiftingTorque240Bar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CraneWeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiftAtFourMeters190Bar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiftAtFourMeters215Bar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiftAtFourMeters240Bar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiftAtFullReach190Bar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiftAtFullReach215Bar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiftAtFullReach240Bar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxReach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PillarSlewingAngle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecommendedOilFLow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotatorMaximumLoad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Series")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlewingCylinder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlewingTorque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelescopeLength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingPressure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Crane");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrutLiftingTorque190Bar = "26",
                            BrutLiftingTorque215Bar = "-",
                            BrutLiftingTorque240Bar = "-",
                            CraneWeight = "360",
                            Description = "Ideális választás azoknak a vásárlóknak, akik egyszerűséget, könnyűséget és kompakt méretet keresnek. Kompatibilis a PALMS 6S és 8SX pótkocsikkal.",
                            LiftAtFourMeters190Bar = "570",
                            LiftAtFourMeters215Bar = "-",
                            LiftAtFourMeters240Bar = "-",
                            LiftAtFullReach190Bar = "540",
                            LiftAtFullReach215Bar = "-",
                            LiftAtFullReach240Bar = "-",
                            MaxReach = "4.2",
                            Name = "PALMS 2.42",
                            PillarSlewingAngle = "370",
                            Price = "5165",
                            RecommendedOilFLow = "20-35",
                            RotatorMaximumLoad = "45",
                            Series = "2",
                            SlewingCylinder = "4",
                            SlewingTorque = "7.8",
                            TelescopeLength = "-",
                            WorkingPressure = "190"
                        },
                        new
                        {
                            Id = 2,
                            BrutLiftingTorque190Bar = "26",
                            BrutLiftingTorque215Bar = "29",
                            BrutLiftingTorque240Bar = "-",
                            CraneWeight = "400",
                            Description = "Kompakt és könnyű daru, ideális városi parkokhoz és más környezetvédelmi érzékeny területekhez. Rögzíthető különböző platformokra, erdészeti pótkocsiktól és teherautóktól kezdve a mini-forwarderekig. Kompatibilis a PALMS 6S és 8SX pótkocsikkal.",
                            LiftAtFourMeters190Bar = "530",
                            LiftAtFourMeters215Bar = "600",
                            LiftAtFourMeters240Bar = "-",
                            LiftAtFullReach190Bar = "370",
                            LiftAtFullReach215Bar = "410",
                            LiftAtFullReach240Bar = "-",
                            MaxReach = "5.4",
                            Name = "PALMS 2.54",
                            PillarSlewingAngle = "370",
                            Price = "6285",
                            RecommendedOilFLow = "20-35",
                            RotatorMaximumLoad = "45",
                            Series = "2",
                            SlewingCylinder = "4",
                            SlewingTorque = "7.8",
                            TelescopeLength = "1,33",
                            WorkingPressure = "190/215"
                        },
                        new
                        {
                            Id = 3,
                            BrutLiftingTorque190Bar = "36",
                            BrutLiftingTorque215Bar = "-",
                            BrutLiftingTorque240Bar = "-",
                            CraneWeight = "415",
                            Description = "Kis erdőtulajdonosoknak tervezett daru a tűzifa előkészítésére saját maguk és szomszédos háztartások számára. Kompatibilis a PALMS 6S és 8SX pótkocsikkal.",
                            LiftAtFourMeters190Bar = "355",
                            LiftAtFourMeters215Bar = "-",
                            LiftAtFourMeters240Bar = "-",
                            LiftAtFullReach190Bar = "-",
                            LiftAtFullReach215Bar = "-",
                            LiftAtFullReach240Bar = "-",
                            MaxReach = "6.3",
                            Name = "PALMS 3.63",
                            PillarSlewingAngle = "370",
                            Price = "6985",
                            RecommendedOilFLow = "20-35",
                            RotatorMaximumLoad = "45",
                            Series = "3",
                            SlewingCylinder = "4",
                            SlewingTorque = "9",
                            TelescopeLength = "1,85",
                            WorkingPressure = "190"
                        },
                        new
                        {
                            Id = 4,
                            BrutLiftingTorque190Bar = "41",
                            BrutLiftingTorque215Bar = "46",
                            BrutLiftingTorque240Bar = "-",
                            CraneWeight = "620",
                            Description = "Egy gazda legjobb társa, kiváló teljesítményt nyújtva tűzifa előkészítésében és általános emelési feladatokban a gazdaságokon. Kompatibilis a PALMS 8SX, 8D, 9SC és 10D pótkocsikkal.",
                            LiftAtFourMeters190Bar = "820",
                            LiftAtFourMeters215Bar = "910",
                            LiftAtFourMeters240Bar = "-",
                            LiftAtFullReach190Bar = "430",
                            LiftAtFullReach215Bar = "480",
                            LiftAtFullReach240Bar = "-",
                            MaxReach = "6.7",
                            Name = "PALMS 3.67",
                            PillarSlewingAngle = "370",
                            Price = "8260",
                            RecommendedOilFLow = "30-45",
                            RotatorMaximumLoad = "45",
                            Series = "3",
                            SlewingCylinder = "4",
                            SlewingTorque = "12",
                            TelescopeLength = "1,85",
                            WorkingPressure = "190/215"
                        },
                        new
                        {
                            Id = 5,
                            BrutLiftingTorque190Bar = "48",
                            BrutLiftingTorque215Bar = "54",
                            BrutLiftingTorque240Bar = "-",
                            CraneWeight = "710",
                            Description = "Versatile medium-sized crane, used across diverse sectors like arboriculture, farming, and land development. Compatible with the majority of PALMS trailers.",
                            LiftAtFourMeters190Bar = "960",
                            LiftAtFourMeters215Bar = "1040",
                            LiftAtFourMeters240Bar = "-",
                            LiftAtFullReach190Bar = "480",
                            LiftAtFullReach215Bar = "535",
                            LiftAtFullReach240Bar = "-",
                            MaxReach = "7.1",
                            Name = "PALMS 4.71",
                            PillarSlewingAngle = "370",
                            Price = "9450",
                            RecommendedOilFLow = "45-70",
                            RotatorMaximumLoad = "45",
                            Series = "4",
                            SlewingCylinder = "4",
                            SlewingTorque = "15",
                            TelescopeLength = "1,95",
                            WorkingPressure = "190/215"
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Cranes.FrameType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FrameType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "B0",
                            Name = "Talpaló nélkül",
                            Price = "0"
                        },
                        new
                        {
                            Id = 2,
                            Code = "B2.1",
                            Name = "A típusú kis letalpaló, 3 pontos csatlakozással",
                            Price = "1680"
                        },
                        new
                        {
                            Id = 3,
                            Code = "B3",
                            Name = "A típusú normál méretű letalpaló, 3 pontos csatlakozással",
                            Price = "2100"
                        },
                        new
                        {
                            Id = 4,
                            Code = "B4e",
                            Name = "FD típusú economy letalpaló",
                            Price = "2100"
                        },
                        new
                        {
                            Id = 5,
                            Code = "B6.1",
                            Name = "FD típusú letalpaló, 3 pontos csatlakozással",
                            Price = "3090"
                        },
                        new
                        {
                            Id = 6,
                            Code = "B09",
                            Name = "Különösen erős alap, talpaló lábak nélkül",
                            Price = "1155"
                        },
                        new
                        {
                            Id = 7,
                            Code = "B9",
                            Name = "FD típusú, különösen erős letalpaló (HD)",
                            Price = "3530"
                        },
                        new
                        {
                            Id = 8,
                            Code = "B10",
                            Name = "Talpaló Z daruhoz",
                            Price = "3685"
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.BBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BBox");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Bbox",
                            Name = "Biomasszás boksz 4 mm-es Strenx acélból",
                            Price = "2825"
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.BolsterLock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BolsterLock");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "BL",
                            Name = "Rakconca rögzítő az első pár rakoncához",
                            Price = "0"
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.Brake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brake");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "B0",
                            Name = "Fék nélkül",
                            Price = "0"
                        },
                        new
                        {
                            Id = 2,
                            Code = "B1",
                            Name = "2 keréken hidraulikus fék",
                            Price = "960"
                        },
                        new
                        {
                            Id = 3,
                            Code = "B2",
                            Name = "4 keréken hidraulikus fék",
                            Price = "1810"
                        },
                        new
                        {
                            Id = 4,
                            Code = "B3",
                            Name = "2 keréken légfék",
                            Price = "1615"
                        },
                        new
                        {
                            Id = 5,
                            Code = "B4",
                            Name = "4 keréken légfék",
                            Price = "2640"
                        },
                        new
                        {
                            Id = 6,
                            Code = "BA-EU",
                            Name = "Légfék",
                            Price = "2095"
                        },
                        new
                        {
                            Id = 7,
                            Code = "BH-EU",
                            Name = "Hidraulikus fék",
                            Price = "3450"
                        },
                        new
                        {
                            Id = 8,
                            Code = "BA-EU",
                            Name = "Légfék",
                            Price = "3125"
                        },
                        new
                        {
                            Id = 9,
                            Code = "BH-EU",
                            Name = "Hidraulikus fék",
                            Price = "4295"
                        },
                        new
                        {
                            Id = 10,
                            Code = "B1",
                            Name = "2 keréken hidraulikus fék",
                            Price = "1255"
                        },
                        new
                        {
                            Id = 11,
                            Code = "B2",
                            Name = "4 keréken hidraulikus fék",
                            Price = "4545"
                        },
                        new
                        {
                            Id = 12,
                            Code = "B3",
                            Name = "2 keréken légfék",
                            Price = "1915"
                        },
                        new
                        {
                            Id = 13,
                            Code = "B4",
                            Name = "4 keréken légfék",
                            Price = "5385"
                        },
                        new
                        {
                            Id = 14,
                            Code = "BA-EU",
                            Name = "Légfék",
                            Price = "5605"
                        },
                        new
                        {
                            Id = 15,
                            Code = "BH-EU",
                            Name = "Hidraulikus fék",
                            Price = "6770"
                        },
                        new
                        {
                            Id = 16,
                            Code = "B2",
                            Name = "4 keréken hidraulikus fék",
                            Price = "2415"
                        },
                        new
                        {
                            Id = 17,
                            Code = "B4",
                            Name = "4 keréken légfék",
                            Price = "3255"
                        },
                        new
                        {
                            Id = 18,
                            Code = "BA-EU",
                            Name = "Légfék",
                            Price = "3740"
                        },
                        new
                        {
                            Id = 19,
                            Code = "BH-EU",
                            Name = "Hidraulikus fék",
                            Price = "4905"
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.ChainsawHolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChainsawHolder");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "MSH",
                            Name = "Láncfűrész tartó",
                            Price = "65"
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.Drawbar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drawbar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "C1",
                            Name = "Skandináv típusú forgó vonórúd",
                            Price = "0"
                        },
                        new
                        {
                            Id = 2,
                            Code = "C2",
                            Name = "Német típusú magas vonórúd vonószem nélkül",
                            Price = "0"
                        },
                        new
                        {
                            Id = 3,
                            Code = "C3",
                            Name = "Osztrák típusú alacsony vonórúd vonószem nélkül",
                            Price = "0"
                        },
                        new
                        {
                            Id = 4,
                            Code = "C4",
                            Name = "Német típusú magas vonórúd vonószemmel",
                            Price = "275"
                        },
                        new
                        {
                            Id = 5,
                            Code = "C5",
                            Name = "Osztrák típusú magas vonórúd vonószemmel",
                            Price = "275"
                        },
                        new
                        {
                            Id = 6,
                            Code = "C6",
                            Name = "Német típusú magas vonórúd vonószemmel",
                            Price = "430"
                        },
                        new
                        {
                            Id = 7,
                            Code = "C7",
                            Name = "Magas ráfutófékes vonórúd vonószemmel, kábelekkel és 2 kerék fékkel",
                            Price = "1675"
                        },
                        new
                        {
                            Id = 8,
                            Code = "C6",
                            Name = "K-80 típusú alacsony vonórúd vonószemmel",
                            Price = "470"
                        },
                        new
                        {
                            Id = 9,
                            Code = "C9",
                            Name = "Osztrák típusú alacsony vonórúd elforduló vonószemmel",
                            Price = "525"
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.HandBrake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HandBrake");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "PB1",
                            Name = "Kézifék, kerékről működtethető",
                            Price = "105"
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.Light", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Light");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "L1",
                            Name = "Összecsukható hátsó lámpák",
                            Price = "420"
                        },
                        new
                        {
                            Id = 2,
                            Code = "L2",
                            Name = "Hátsó LED lámpa flexibilis Kilpi karokkal",
                            Price = "465"
                        },
                        new
                        {
                            Id = 3,
                            Code = "L4",
                            Name = "Fix hátsó LED lámpák",
                            Price = "420"
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.OilPump", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OilPump");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "P01",
                            Name = "Szivattyú adapter a vonórúdon",
                            Price = "60"
                        },
                        new
                        {
                            Id = 2,
                            Code = "P1",
                            Name = "101 cm3 dugattyús olajmpumpa a vonórúdon, 650 p/min - 65 l/min",
                            Price = "1155"
                        },
                        new
                        {
                            Id = 3,
                            Code = "P2",
                            Name = "130 cm3 dugattyús olajmpuma a vonórúdon, 650 p/min - 82 l/min",
                            Price = "1575"
                        },
                        new
                        {
                            Id = 4,
                            Code = "P4",
                            Name = "61 cm3 dugattyús olajpumpa multiplikátorral a vonórúdon, 650 p/min - 98 l/min",
                            Price = "1995"
                        },
                        new
                        {
                            Id = 5,
                            Code = "P4PTO",
                            Name = "P4 olajmpumla PTO-val 650 p/min - 98 l/min (rögzítő konzol nélkül)",
                            Price = "1995"
                        },
                        new
                        {
                            Id = 6,
                            Code = "P6",
                            Name = "LS fajtájú olajmpumpa multiplikátorral, 650 p/min - 120 l/min",
                            Price = "4305"
                        },
                        new
                        {
                            Id = 7,
                            Code = "P6PTO",
                            Name = "P6 olajpumpa PTO-val 650 p/min - 120 l/min (rögzítő konzol nélkül)",
                            Price = "4305"
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.OilTank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OilTankCoolerId")
                        .HasColumnType("int");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OilTankCoolerId");

                    b.ToTable("OilTank");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "T2",
                            Name = "95 l-es olajtartály",
                            OilTankCoolerId = 1,
                            Price = "1000"
                        },
                        new
                        {
                            Id = 2,
                            Code = "T2+",
                            Name = "95 l-es olajtartály HVLP olajjal",
                            OilTankCoolerId = 1,
                            Price = "1290"
                        },
                        new
                        {
                            Id = 3,
                            Code = "T2SOV",
                            Name = "95 l-es olajtartály HVLP olajjal, elzáró csappal",
                            Price = "1200"
                        },
                        new
                        {
                            Id = 4,
                            Code = "T2SOV+",
                            Name = "95 l-es olajtartály HVLP olajjal, elzáró csappal, olajszűrővel",
                            Price = "1490"
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.OilTankCooler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OilTankCooler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "CP2",
                            Name = "Olajhűtő csomag a tartályhoz rögzítve",
                            Price = "1035"
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platform");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "D1",
                            Name = "Kezelő platform háttámlával a vonórúdon",
                            Price = "600"
                        },
                        new
                        {
                            Id = 2,
                            Code = "D2",
                            Name = "Kezelő platform háttámlával a vonórúdon túlfutásgátlós vonórúddal",
                            Price = "600"
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.Propulsion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Propulsion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "RWD",
                            Name = "Robson WD dörzshajtás (traktor hidarulikáról)",
                            Price = "5280"
                        },
                        new
                        {
                            Id = 2,
                            Code = "RWD+",
                            Name = "Robson WD dörzshajtás elektronikus vezérlőrendszerrel",
                            Price = "7600"
                        },
                        new
                        {
                            Id = 3,
                            Code = "25WDF",
                            Name = "2WD agyhajtás (BB 250 az első tengelyen elektronikus vezérléssel",
                            Price = "0"
                        },
                        new
                        {
                            Id = 4,
                            Code = "25WDR",
                            Name = "2WD agyhajtás (BB 250 a hátsó tengelyen elektronikus vezérléssel",
                            Price = "0"
                        },
                        new
                        {
                            Id = 5,
                            Code = "RWD",
                            Name = "Robson WD dörzshajtás (traktor hidarulikáról)",
                            Price = "4845"
                        },
                        new
                        {
                            Id = 6,
                            Code = "RWD+",
                            Name = "Robson WD dörzshajtás elektronikus vezérlőrendszerrel",
                            Price = "7170"
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.Stanchion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stanchion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "A3",
                            Name = "Pótkocsi 3 pár rakoncával",
                            Price = "5285"
                        },
                        new
                        {
                            Id = 2,
                            Code = "A4",
                            Name = "Pótkocsi 4 pár rakoncával",
                            Price = "5800"
                        },
                        new
                        {
                            Id = 3,
                            Code = "A3",
                            Name = "Pótkocsi 3 pár rakoncával",
                            Price = "6930"
                        },
                        new
                        {
                            Id = 4,
                            Code = "A4",
                            Name = "Pótkocsi 4 pár rakoncával",
                            Price = "7390"
                        },
                        new
                        {
                            Id = 5,
                            Code = "A4Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 4 pár rakoncával",
                            Price = "7700"
                        },
                        new
                        {
                            Id = 6,
                            Code = "A5Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 5 pár rakoncával",
                            Price = "8160"
                        },
                        new
                        {
                            Id = 7,
                            Code = "A3",
                            Name = "Pótkocsi 3 pár rakoncával",
                            Price = "7340"
                        },
                        new
                        {
                            Id = 8,
                            Code = "A4",
                            Name = "Pótkocsi 4 pár rakoncával",
                            Price = "7710"
                        },
                        new
                        {
                            Id = 9,
                            Code = "A4Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 4 pár rakoncával",
                            Price = "8330"
                        },
                        new
                        {
                            Id = 10,
                            Code = "A5Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 5 pár rakoncával",
                            Price = "8695"
                        },
                        new
                        {
                            Id = 11,
                            Code = "A3",
                            Name = "Pótkocsi 3 pár rakoncával",
                            Price = "20215"
                        },
                        new
                        {
                            Id = 12,
                            Code = "A4",
                            Name = "Pótkocsi 4 pár rakoncával",
                            Price = "20580"
                        },
                        new
                        {
                            Id = 13,
                            Code = "A4Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 4 pár rakoncával",
                            Price = "21200"
                        },
                        new
                        {
                            Id = 14,
                            Code = "A5Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 5 pár rakoncával",
                            Price = "21570"
                        },
                        new
                        {
                            Id = 15,
                            Code = "A3",
                            Name = "Pótkocsi 3 pár rakoncával",
                            Price = "8080"
                        },
                        new
                        {
                            Id = 16,
                            Code = "A4",
                            Name = "Pótkocsi 4 pár rakoncával",
                            Price = "8540"
                        },
                        new
                        {
                            Id = 17,
                            Code = "A4Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 4 pár rakoncával",
                            Price = "8755"
                        },
                        new
                        {
                            Id = 18,
                            Code = "A5Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 5 pár rakoncával",
                            Price = "9210"
                        },
                        new
                        {
                            Id = 19,
                            Code = "A3",
                            Name = "Pótkocsi 3 pár rakoncával",
                            Price = "8830"
                        },
                        new
                        {
                            Id = 20,
                            Code = "A4",
                            Name = "Pótkocsi 4 pár rakoncával",
                            Price = "9240"
                        },
                        new
                        {
                            Id = 21,
                            Code = "A4Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 4 pár rakoncával",
                            Price = "9860"
                        },
                        new
                        {
                            Id = 22,
                            Code = "A5Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 5 pár rakoncával",
                            Price = "10270"
                        },
                        new
                        {
                            Id = 23,
                            Code = "A3",
                            Name = "Pótkocsi 3 pár rakoncával",
                            Price = "21315"
                        },
                        new
                        {
                            Id = 24,
                            Code = "A4",
                            Name = "Pótkocsi 4 pár rakoncával",
                            Price = "21725"
                        },
                        new
                        {
                            Id = 25,
                            Code = "A4Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 4 pár rakoncával",
                            Price = "22345"
                        },
                        new
                        {
                            Id = 26,
                            Code = "A5Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 5 pár rakoncával",
                            Price = "22755"
                        },
                        new
                        {
                            Id = 27,
                            Code = "A3",
                            Name = "Pótkocsi 3 pár rakoncával",
                            Price = "10880"
                        },
                        new
                        {
                            Id = 28,
                            Code = "A4",
                            Name = "Pótkocsi 4 pár rakoncával",
                            Price = "11290"
                        },
                        new
                        {
                            Id = 29,
                            Code = "A4Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 4 pár rakoncával",
                            Price = "11910"
                        },
                        new
                        {
                            Id = 30,
                            Code = "A5Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 5 pár rakoncával",
                            Price = "12320"
                        },
                        new
                        {
                            Id = 31,
                            Code = "A3",
                            Name = "Pótkocsi 3 pár rakoncával",
                            Price = "22955"
                        },
                        new
                        {
                            Id = 32,
                            Code = "A4",
                            Name = "Pótkocsi 4 pár rakoncával",
                            Price = "23365"
                        },
                        new
                        {
                            Id = 33,
                            Code = "A4Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 4 pár rakoncával",
                            Price = "23985"
                        },
                        new
                        {
                            Id = 34,
                            Code = "A5Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 5 pár rakoncával",
                            Price = "24395"
                        },
                        new
                        {
                            Id = 35,
                            Code = "A3",
                            Name = "Pótkocsi 3 pár rakoncával",
                            Price = "12665"
                        },
                        new
                        {
                            Id = 36,
                            Code = "A4",
                            Name = "Pótkocsi 4 pár rakoncával",
                            Price = "13160"
                        },
                        new
                        {
                            Id = 37,
                            Code = "A4Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 4 pár rakoncával",
                            Price = "13810"
                        },
                        new
                        {
                            Id = 38,
                            Code = "A5Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 5 pár rakoncával",
                            Price = "14305"
                        },
                        new
                        {
                            Id = 39,
                            Code = "A3",
                            Name = "Pótkocsi 3 pár rakoncával",
                            Price = "24740"
                        },
                        new
                        {
                            Id = 40,
                            Code = "A4",
                            Name = "Pótkocsi 4 pár rakoncával",
                            Price = "25235"
                        },
                        new
                        {
                            Id = 41,
                            Code = "A4Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 4 pár rakoncával",
                            Price = "25885"
                        },
                        new
                        {
                            Id = 42,
                            Code = "A5Ex",
                            Name = "Pótkocsi raktérhosszabbítással és 5 pár rakoncával",
                            Price = "26380"
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.SupportLeg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SupportLeg");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "SL",
                            Name = "Csapszeggel állítható kitámasztó láb a vonórúdon",
                            Price = "0"
                        },
                        new
                        {
                            Id = 2,
                            Code = "SL",
                            Name = "Csapszeggel állítható kitámasztó láb a vonórúdon",
                            Price = "75"
                        },
                        new
                        {
                            Id = 3,
                            Code = "SJ",
                            Name = "Tekerővel állítható kitámasztó láb a vonórúdon",
                            Price = "420"
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.TrailerCraneConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CraneId")
                        .HasColumnType("int");

                    b.Property<int>("SelectedFrameTypeId")
                        .HasColumnType("int");

                    b.Property<int>("TrailerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CraneId");

                    b.HasIndex("SelectedFrameTypeId");

                    b.HasIndex("TrailerId");

                    b.ToTable("TrailerCraneConfigurations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CraneId = 4,
                            SelectedFrameTypeId = 1,
                            TrailerId = 1
                        },
                        new
                        {
                            Id = 2,
                            CraneId = 4,
                            SelectedFrameTypeId = 2,
                            TrailerId = 1
                        },
                        new
                        {
                            Id = 3,
                            CraneId = 4,
                            SelectedFrameTypeId = 1,
                            TrailerId = 2
                        },
                        new
                        {
                            Id = 4,
                            CraneId = 4,
                            SelectedFrameTypeId = 3,
                            TrailerId = 2
                        },
                        new
                        {
                            Id = 5,
                            CraneId = 4,
                            SelectedFrameTypeId = 4,
                            TrailerId = 2
                        },
                        new
                        {
                            Id = 6,
                            CraneId = 5,
                            SelectedFrameTypeId = 3,
                            TrailerId = 2
                        },
                        new
                        {
                            Id = 7,
                            CraneId = 5,
                            SelectedFrameTypeId = 4,
                            TrailerId = 2
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.TrailerFrameTypeConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FrameTypeId")
                        .HasColumnType("int");

                    b.Property<int>("TrailerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FrameTypeId");

                    b.HasIndex("TrailerId");

                    b.ToTable("TrailerFrameTypeConfiguration");
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.Tyre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tyre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "WH2.6e",
                            Name = "400/60-15,5 standard felni, 6 lyukas, Starco",
                            Price = "1250"
                        },
                        new
                        {
                            Id = 2,
                            Code = "WH2.6",
                            Name = "400/60-15,5 RF-felni, 6 lyukas, Starco",
                            Price = "1450"
                        },
                        new
                        {
                            Id = 3,
                            Code = "WH4.6",
                            Name = "480/45-17 RF-felni, 6 lyukas, Starco",
                            Price = "2310"
                        },
                        new
                        {
                            Id = 4,
                            Code = "WH4.8",
                            Name = "480/45-17 RF-felni, 8 lyukas, Starco (kérésre)",
                            Price = "0"
                        },
                        new
                        {
                            Id = 5,
                            Code = "WH3.6",
                            Name = "500/50-17 RF-felni, 6 lyukas, BKT (kérésre)",
                            Price = "0"
                        },
                        new
                        {
                            Id = 6,
                            Code = "WH3.6",
                            Name = "500/50-17 RF-felni, 6 lyukas, BKT",
                            Price = "2500"
                        },
                        new
                        {
                            Id = 7,
                            Code = "WH3.8",
                            Name = "500/50-17 RF-felni, 8 lyukas, BKT",
                            Price = "2500"
                        },
                        new
                        {
                            Id = 8,
                            Code = "WH5.6",
                            Name = "400/55-22,5 RF-felni, 6 lyukas, Alliance (kérésre)",
                            Price = "0"
                        },
                        new
                        {
                            Id = 9,
                            Code = "WH5.6",
                            Name = "400/55-22,5 RF-felni, 6 lyukas, Alliance",
                            Price = "3215"
                        },
                        new
                        {
                            Id = 10,
                            Code = "WH8.8",
                            Name = "500/55-22,5 RF-felni, 8 lyukas, BKT",
                            Price = "3770"
                        },
                        new
                        {
                            Id = 11,
                            Code = "WH6.8",
                            Name = "550/45-22,5 RF-felni, 8 lyukas, BKT",
                            Price = "4010"
                        },
                        new
                        {
                            Id = 12,
                            Code = "WH6.8V",
                            Name = "550/45-22,5 RF-felni, 8 lyukas, BKT - traktor mintás",
                            Price = "4410"
                        },
                        new
                        {
                            Id = 13,
                            Code = "WH9.8V",
                            Name = "600/40-22,5 RF-felni, 8 lyukas, BKT - traktor mintás",
                            Price = "6425"
                        },
                        new
                        {
                            Id = 14,
                            Code = "WH7.8",
                            Name = "600/50-22,5 RF-felni, 8 lyukas, Alliance",
                            Price = "5410"
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.UnderrunProtection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UnderrunProtection");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "RUP1",
                            Name = "Aláfutásgátló D-típushoz, hátsó lámpa és rendszámtartó",
                            Price = "1040"
                        },
                        new
                        {
                            Id = 2,
                            Code = "RUP2",
                            Name = "Aláfutásgátló S és U-típushoz, hátsó lámpa és rendszámtartó",
                            Price = "1040"
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.WoodSorter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WoodSorter");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "WS",
                            Name = "Faosztályozó rövidebb fához (1db/rakonca, az ár 1 db-ra vonatkozik)",
                            Price = "65"
                        });
                });

            modelBuilder.Entity("CalcAppAPI.Models.Trailer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BBoxId")
                        .HasColumnType("int");

                    b.Property<string>("BeamType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BolsterLockId")
                        .HasColumnType("int");

                    b.Property<int?>("ChainsawHolderId")
                        .HasColumnType("int");

                    b.Property<string>("CurbWeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrawbarControlCylinders")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frame")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FrameExtensionLength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrossWeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HandBrakeId")
                        .HasColumnType("int");

                    b.Property<string>("LoadingAreaCross")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoadingAreaLength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxCraneSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StandardWheelSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalLength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UnderrunProtectionId")
                        .HasColumnType("int");

                    b.Property<string>("WidthWithStandardWheels")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WoodSorterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BBoxId");

                    b.HasIndex("BolsterLockId");

                    b.HasIndex("ChainsawHolderId");

                    b.HasIndex("HandBrakeId");

                    b.HasIndex("UnderrunProtectionId");

                    b.HasIndex("WoodSorterId");

                    b.ToTable("Trailer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BeamType = "Egy",
                            ChainsawHolderId = 1,
                            CurbWeight = "890",
                            Description = "A PALMS 6S egyetlen gerendás erdészeti pótkocsi, melynek nominális teherbírása 6 tonna. Könnyű és kompakt kialakítása tökéletes választás kisebb traktorokhoz, ideális magán-erdőgazdálkodáshoz és gazdálkodóknak. A PALMS 6S hasonló technológiákat használ, mint nagyobb pótkocsijaink, beleértve a magas minőségű KTL és porfestési bevonatot, ami hosszabb élettartamot és nagyobb újraértékesítési értéket biztosít.",
                            DrawbarControlCylinders = "1",
                            Frame = "140x140x6",
                            FrameExtensionLength = "-",
                            GrossWeight = "8500",
                            LoadingAreaCross = "1,5",
                            LoadingAreaLength = "3000",
                            MaxCraneSize = "35",
                            Name = "PALMS 6S",
                            Price = "",
                            StandardWheelSize = "400/60-15,5",
                            TotalLength = "4900",
                            WidthWithStandardWheels = "1950"
                        },
                        new
                        {
                            Id = 2,
                            BBoxId = 1,
                            BeamType = "Egy",
                            BolsterLockId = 1,
                            ChainsawHolderId = 1,
                            CurbWeight = "1180",
                            Description = "A PALMS 8SX egyetlen gerendával rendelkező erdészeti utánfutó, amelynek nominális teherbírása 8 tonna. Ez a modell népszerű választás számos kis erdőbirtokos és gazdálkodó körében. Az utánfutó egyszerű, mégis robosztus kialakítása és tartóssága megbízható társává teszi különböző erdészeti és mezőgazdasági feladatokban.",
                            DrawbarControlCylinders = "2",
                            Frame = "160x160x8",
                            FrameExtensionLength = "0,61",
                            GrossWeight = "10000",
                            HandBrakeId = 1,
                            LoadingAreaCross = "2",
                            LoadingAreaLength = "3550",
                            MaxCraneSize = "47",
                            Name = "PALMS 8SX",
                            Price = "",
                            StandardWheelSize = "400/60-15,5",
                            TotalLength = "5690",
                            UnderrunProtectionId = 2,
                            WidthWithStandardWheels = "2070",
                            WoodSorterId = 1
                        },
                        new
                        {
                            Id = 3,
                            BBoxId = 1,
                            BeamType = "Dupla",
                            BolsterLockId = 1,
                            ChainsawHolderId = 1,
                            CurbWeight = "1510",
                            Description = "A PALMS 8D, amelynek nominális teherbírása 8 tonna, a legkompaktabb két gerendás utánfutó a termékpalettánkban. Azoknak a felhasználóknak terveztük, akik könnyebb utánfutót keresnek, de mégis szeretnének egy két gerendás utánfutó nagyobb szilárdságát és merevségét.",
                            DrawbarControlCylinders = "2",
                            Frame = "2x200x100x8",
                            FrameExtensionLength = "0,85",
                            GrossWeight = "10000",
                            HandBrakeId = 1,
                            LoadingAreaCross = "1,95",
                            LoadingAreaLength = "3975",
                            MaxCraneSize = "85",
                            Name = "PALMS 8D",
                            Price = "",
                            StandardWheelSize = "400/60-15,5",
                            TotalLength = "6200",
                            UnderrunProtectionId = 1,
                            WidthWithStandardWheels = "2095",
                            WoodSorterId = 1
                        },
                        new
                        {
                            Id = 4,
                            BBoxId = 1,
                            BeamType = "Dupla",
                            BolsterLockId = 1,
                            ChainsawHolderId = 1,
                            CurbWeight = "1510",
                            Description = "A PALMS 8D, amelynek nominális teherbírása 8 tonna, a legkompaktabb két gerendás utánfutó a termékpalettánkban. Azoknak a felhasználóknak terveztük, akik könnyebb utánfutót keresnek, de mégis szeretnének egy két gerendás utánfutó nagyobb szilárdságát és merevségét.",
                            DrawbarControlCylinders = "2",
                            Frame = "2x200x100x8",
                            FrameExtensionLength = "0,85",
                            GrossWeight = "10000",
                            HandBrakeId = 1,
                            LoadingAreaCross = "1,95",
                            LoadingAreaLength = "3975",
                            MaxCraneSize = "85",
                            Name = "PALMS 8DWD",
                            Price = "",
                            StandardWheelSize = "400/60-15,5",
                            TotalLength = "6200",
                            UnderrunProtectionId = 1,
                            WidthWithStandardWheels = "2095",
                            WoodSorterId = 1
                        },
                        new
                        {
                            Id = 5,
                            BBoxId = 1,
                            BeamType = "Egy",
                            BolsterLockId = 1,
                            ChainsawHolderId = 1,
                            CurbWeight = "1425",
                            Description = "A PALMS 9SC a termékpalettánk legnagyobb egygerendás utánfutója, 9 tonnás nominális teherbírással. Ideális választás azoknak a vásárlóknak, akik preferálják az egygerendás utánfutó egyszerűségét, miközben hosszabb hatótávot igényelnek egy erdészeti darutól. Ez a jellemző például népszerűvé teszi arboristák körében. Emellett a PALMS 9SC kiemelkedik a felhasználói kényelem terén más egygerendás utánfutók közül, gyorszárú vontatókar rendszerével és szabadalmaztatott tengelyzárjaival.",
                            DrawbarControlCylinders = "2",
                            Frame = "200x200x6",
                            FrameExtensionLength = "0,70",
                            GrossWeight = "12000",
                            HandBrakeId = 1,
                            LoadingAreaCross = "2,15",
                            LoadingAreaLength = "3870",
                            MaxCraneSize = "65",
                            Name = "PALMS 9SC",
                            Price = "",
                            StandardWheelSize = "400/60-15,5",
                            TotalLength = "6095",
                            UnderrunProtectionId = 2,
                            WidthWithStandardWheels = "2135",
                            WoodSorterId = 1
                        },
                        new
                        {
                            Id = 6,
                            BBoxId = 1,
                            BeamType = "Dupla",
                            BolsterLockId = 1,
                            ChainsawHolderId = 1,
                            CurbWeight = "1765",
                            Description = "A PALMS 10D, dupla gerendás vázú és 10 tonnás nominális teherbírású, az egyik legkelendőbb erdészeti utánfutó a PALMS terméksorozatában. Kiválóan párosítható a legtöbb PALMS daruval és további felszereléssel, lehetővé téve a testreszabást, hogy olyan beállítást hozzon létre, amely pontosan megfelel az elvárásainak.",
                            DrawbarControlCylinders = "2",
                            Frame = "2x200x100x8",
                            FrameExtensionLength = "0,85",
                            GrossWeight = "13000",
                            HandBrakeId = 1,
                            LoadingAreaCross = "2,4",
                            LoadingAreaLength = "3975",
                            MaxCraneSize = "85",
                            Name = "PALMS 10D",
                            Price = "",
                            StandardWheelSize = "400/60-15,5",
                            TotalLength = "6200",
                            UnderrunProtectionId = 1,
                            WidthWithStandardWheels = "2165",
                            WoodSorterId = 1
                        },
                        new
                        {
                            Id = 7,
                            BBoxId = 1,
                            BeamType = "Dupla",
                            BolsterLockId = 1,
                            ChainsawHolderId = 1,
                            CurbWeight = "1765",
                            Description = "A PALMS 10D, dupla gerendás vázú és 10 tonnás nominális teherbírású, az egyik legkelendőbb erdészeti utánfutó a PALMS terméksorozatában. Kiválóan párosítható a legtöbb PALMS daruval és további felszereléssel, lehetővé téve a testreszabást, hogy olyan beállítást hozzon létre, amely pontosan megfelel az elvárásainak.",
                            DrawbarControlCylinders = "2",
                            Frame = "2x200x100x8",
                            FrameExtensionLength = "0,85",
                            GrossWeight = "12500",
                            HandBrakeId = 1,
                            LoadingAreaCross = "2,4",
                            LoadingAreaLength = "3975",
                            MaxCraneSize = "85",
                            Name = "PALMS 10DWD",
                            Price = "",
                            StandardWheelSize = "400/60-15,5",
                            TotalLength = "6200",
                            UnderrunProtectionId = 1,
                            WidthWithStandardWheels = "2165",
                            WoodSorterId = 1
                        },
                        new
                        {
                            Id = 8,
                            BBoxId = 1,
                            BeamType = "Dupla",
                            BolsterLockId = 1,
                            ChainsawHolderId = 1,
                            CurbWeight = "2030",
                            Description = "A PALMS 12D egy erdészeti utánfutó, 12 tonnás nominális teherbírással és dupla gerendás vázzal. Kiváló választás mindennapi erdészeti feladatokhoz, nagyszerű kompatibilitást nyújtva a PALMS ötödik és hetedik sorozatú daruival.",
                            DrawbarControlCylinders = "2",
                            Frame = "2x200x100x8",
                            FrameExtensionLength = "0,85",
                            GrossWeight = "15000",
                            HandBrakeId = 1,
                            LoadingAreaCross = "2,7",
                            LoadingAreaLength = "3975",
                            MaxCraneSize = "85",
                            Name = "PALMS 12D",
                            Price = "",
                            StandardWheelSize = "500/50-17",
                            TotalLength = "6200",
                            UnderrunProtectionId = 1,
                            WidthWithStandardWheels = "2350",
                            WoodSorterId = 1
                        },
                        new
                        {
                            Id = 9,
                            BBoxId = 1,
                            BeamType = "Dupla",
                            BolsterLockId = 1,
                            ChainsawHolderId = 1,
                            CurbWeight = "2030",
                            Description = "A PALMS 12D egy erdészeti utánfutó, 12 tonnás nominális teherbírással és dupla gerendás vázzal. Kiváló választás mindennapi erdészeti feladatokhoz, nagyszerű kompatibilitást nyújtva a PALMS ötödik és hetedik sorozatú daruival.",
                            DrawbarControlCylinders = "2",
                            Frame = "2x200x100x8",
                            FrameExtensionLength = "0,85",
                            GrossWeight = "15000",
                            HandBrakeId = 1,
                            LoadingAreaCross = "2,7",
                            LoadingAreaLength = "3975",
                            MaxCraneSize = "85",
                            Name = "PALMS 12DWD",
                            Price = "",
                            StandardWheelSize = "500/50-17",
                            TotalLength = "6200",
                            UnderrunProtectionId = 1,
                            WidthWithStandardWheels = "2350",
                            WoodSorterId = 1
                        },
                        new
                        {
                            Id = 10,
                            BBoxId = 1,
                            BeamType = "Dupla",
                            BolsterLockId = 1,
                            ChainsawHolderId = 1,
                            CurbWeight = "2375",
                            Description = "A PALMS 14D a PALMS palettájának legnagyobb dupla gerendás utánfutója, jelentős 14 tonnás nominális teherbírással. A PALMS 14D nemcsak nagyobb terhelési területtel rendelkezik, hanem kiterjesztett terhelési területet is kínál más dupla gerendás utánfutókkal összehasonlítva. Emellett ez az utánfutó kompatibilis a PALMS zászlóshajójával, az X100-as erdészeti daruval.",
                            DrawbarControlCylinders = "2",
                            Frame = "2x200x120x10",
                            FrameExtensionLength = "0,86",
                            GrossWeight = "18000",
                            HandBrakeId = 1,
                            LoadingAreaCross = "3,0",
                            LoadingAreaLength = "4080",
                            MaxCraneSize = "112",
                            Name = "PALMS 14D",
                            Price = "",
                            StandardWheelSize = "500/50-17",
                            TotalLength = "6300",
                            UnderrunProtectionId = 1,
                            WidthWithStandardWheels = "2450",
                            WoodSorterId = 1
                        },
                        new
                        {
                            Id = 11,
                            BBoxId = 1,
                            BeamType = "Dupla",
                            BolsterLockId = 1,
                            ChainsawHolderId = 1,
                            CurbWeight = "2375",
                            Description = "A PALMS 14D a PALMS palettájának legnagyobb dupla gerendás utánfutója, jelentős 14 tonnás nominális teherbírással. A PALMS 14D nemcsak nagyobb terhelési területtel rendelkezik, hanem kiterjesztett terhelési területet is kínál más dupla gerendás utánfutókkal összehasonlítva. Emellett ez az utánfutó kompatibilis a PALMS zászlóshajójával, az X100-as erdészeti daruval.",
                            DrawbarControlCylinders = "2",
                            Frame = "2x200x120x10",
                            FrameExtensionLength = "0,86",
                            GrossWeight = "18000",
                            HandBrakeId = 1,
                            LoadingAreaCross = "3,0",
                            LoadingAreaLength = "4080",
                            MaxCraneSize = "112",
                            Name = "PALMS 14DWD",
                            Price = "",
                            StandardWheelSize = "500/50-17",
                            TotalLength = "6300",
                            UnderrunProtectionId = 1,
                            WidthWithStandardWheels = "2450",
                            WoodSorterId = 1
                        });
                });

            modelBuilder.Entity("CraneTrailer", b =>
                {
                    b.Property<int>("CraneId")
                        .HasColumnType("int");

                    b.Property<int>("TrailerId")
                        .HasColumnType("int");

                    b.HasKey("CraneId", "TrailerId");

                    b.HasIndex("TrailerId");

                    b.ToTable("CraneTrailer", (string)null);

                    b.HasData(
                        new
                        {
                            CraneId = 1,
                            TrailerId = 1
                        },
                        new
                        {
                            CraneId = 2,
                            TrailerId = 1
                        },
                        new
                        {
                            CraneId = 1,
                            TrailerId = 2
                        },
                        new
                        {
                            CraneId = 2,
                            TrailerId = 2
                        });
                });

            modelBuilder.Entity("DrawbarTrailer", b =>
                {
                    b.Property<int>("DrawbarId")
                        .HasColumnType("int");

                    b.Property<int>("TrailerId")
                        .HasColumnType("int");

                    b.HasKey("DrawbarId", "TrailerId");

                    b.HasIndex("TrailerId");

                    b.ToTable("DrawbarTrailer", (string)null);

                    b.HasData(
                        new
                        {
                            DrawbarId = 1,
                            TrailerId = 1
                        },
                        new
                        {
                            DrawbarId = 2,
                            TrailerId = 1
                        },
                        new
                        {
                            DrawbarId = 3,
                            TrailerId = 1
                        },
                        new
                        {
                            DrawbarId = 4,
                            TrailerId = 1
                        },
                        new
                        {
                            DrawbarId = 5,
                            TrailerId = 1
                        },
                        new
                        {
                            DrawbarId = 9,
                            TrailerId = 1
                        },
                        new
                        {
                            DrawbarId = 1,
                            TrailerId = 2
                        },
                        new
                        {
                            DrawbarId = 2,
                            TrailerId = 2
                        },
                        new
                        {
                            DrawbarId = 3,
                            TrailerId = 2
                        },
                        new
                        {
                            DrawbarId = 4,
                            TrailerId = 2
                        },
                        new
                        {
                            DrawbarId = 5,
                            TrailerId = 2
                        },
                        new
                        {
                            DrawbarId = 6,
                            TrailerId = 2
                        },
                        new
                        {
                            DrawbarId = 7,
                            TrailerId = 2
                        },
                        new
                        {
                            DrawbarId = 9,
                            TrailerId = 2
                        },
                        new
                        {
                            DrawbarId = 1,
                            TrailerId = 3
                        },
                        new
                        {
                            DrawbarId = 2,
                            TrailerId = 3
                        },
                        new
                        {
                            DrawbarId = 3,
                            TrailerId = 3
                        },
                        new
                        {
                            DrawbarId = 4,
                            TrailerId = 3
                        },
                        new
                        {
                            DrawbarId = 5,
                            TrailerId = 3
                        },
                        new
                        {
                            DrawbarId = 6,
                            TrailerId = 3
                        },
                        new
                        {
                            DrawbarId = 9,
                            TrailerId = 3
                        },
                        new
                        {
                            DrawbarId = 1,
                            TrailerId = 4
                        },
                        new
                        {
                            DrawbarId = 2,
                            TrailerId = 4
                        },
                        new
                        {
                            DrawbarId = 3,
                            TrailerId = 4
                        },
                        new
                        {
                            DrawbarId = 4,
                            TrailerId = 4
                        },
                        new
                        {
                            DrawbarId = 5,
                            TrailerId = 4
                        },
                        new
                        {
                            DrawbarId = 6,
                            TrailerId = 4
                        },
                        new
                        {
                            DrawbarId = 9,
                            TrailerId = 4
                        },
                        new
                        {
                            DrawbarId = 1,
                            TrailerId = 5
                        },
                        new
                        {
                            DrawbarId = 2,
                            TrailerId = 5
                        },
                        new
                        {
                            DrawbarId = 3,
                            TrailerId = 5
                        },
                        new
                        {
                            DrawbarId = 4,
                            TrailerId = 5
                        },
                        new
                        {
                            DrawbarId = 5,
                            TrailerId = 5
                        },
                        new
                        {
                            DrawbarId = 6,
                            TrailerId = 5
                        },
                        new
                        {
                            DrawbarId = 9,
                            TrailerId = 5
                        },
                        new
                        {
                            DrawbarId = 1,
                            TrailerId = 6
                        },
                        new
                        {
                            DrawbarId = 2,
                            TrailerId = 6
                        },
                        new
                        {
                            DrawbarId = 3,
                            TrailerId = 6
                        },
                        new
                        {
                            DrawbarId = 4,
                            TrailerId = 6
                        },
                        new
                        {
                            DrawbarId = 5,
                            TrailerId = 6
                        },
                        new
                        {
                            DrawbarId = 6,
                            TrailerId = 6
                        },
                        new
                        {
                            DrawbarId = 9,
                            TrailerId = 6
                        },
                        new
                        {
                            DrawbarId = 1,
                            TrailerId = 7
                        },
                        new
                        {
                            DrawbarId = 2,
                            TrailerId = 7
                        },
                        new
                        {
                            DrawbarId = 3,
                            TrailerId = 7
                        },
                        new
                        {
                            DrawbarId = 4,
                            TrailerId = 7
                        },
                        new
                        {
                            DrawbarId = 5,
                            TrailerId = 7
                        },
                        new
                        {
                            DrawbarId = 6,
                            TrailerId = 7
                        },
                        new
                        {
                            DrawbarId = 9,
                            TrailerId = 7
                        },
                        new
                        {
                            DrawbarId = 1,
                            TrailerId = 8
                        },
                        new
                        {
                            DrawbarId = 2,
                            TrailerId = 8
                        },
                        new
                        {
                            DrawbarId = 3,
                            TrailerId = 8
                        },
                        new
                        {
                            DrawbarId = 4,
                            TrailerId = 8
                        },
                        new
                        {
                            DrawbarId = 5,
                            TrailerId = 8
                        },
                        new
                        {
                            DrawbarId = 6,
                            TrailerId = 8
                        },
                        new
                        {
                            DrawbarId = 8,
                            TrailerId = 8
                        },
                        new
                        {
                            DrawbarId = 9,
                            TrailerId = 8
                        },
                        new
                        {
                            DrawbarId = 1,
                            TrailerId = 9
                        },
                        new
                        {
                            DrawbarId = 2,
                            TrailerId = 9
                        },
                        new
                        {
                            DrawbarId = 3,
                            TrailerId = 9
                        },
                        new
                        {
                            DrawbarId = 4,
                            TrailerId = 9
                        },
                        new
                        {
                            DrawbarId = 5,
                            TrailerId = 9
                        },
                        new
                        {
                            DrawbarId = 6,
                            TrailerId = 9
                        },
                        new
                        {
                            DrawbarId = 8,
                            TrailerId = 9
                        },
                        new
                        {
                            DrawbarId = 9,
                            TrailerId = 9
                        },
                        new
                        {
                            DrawbarId = 1,
                            TrailerId = 10
                        },
                        new
                        {
                            DrawbarId = 2,
                            TrailerId = 10
                        },
                        new
                        {
                            DrawbarId = 3,
                            TrailerId = 10
                        },
                        new
                        {
                            DrawbarId = 4,
                            TrailerId = 10
                        },
                        new
                        {
                            DrawbarId = 5,
                            TrailerId = 10
                        },
                        new
                        {
                            DrawbarId = 6,
                            TrailerId = 10
                        },
                        new
                        {
                            DrawbarId = 8,
                            TrailerId = 10
                        },
                        new
                        {
                            DrawbarId = 9,
                            TrailerId = 10
                        },
                        new
                        {
                            DrawbarId = 1,
                            TrailerId = 11
                        },
                        new
                        {
                            DrawbarId = 2,
                            TrailerId = 11
                        },
                        new
                        {
                            DrawbarId = 3,
                            TrailerId = 11
                        },
                        new
                        {
                            DrawbarId = 4,
                            TrailerId = 11
                        },
                        new
                        {
                            DrawbarId = 5,
                            TrailerId = 11
                        },
                        new
                        {
                            DrawbarId = 6,
                            TrailerId = 11
                        },
                        new
                        {
                            DrawbarId = 8,
                            TrailerId = 11
                        },
                        new
                        {
                            DrawbarId = 9,
                            TrailerId = 11
                        });
                });

            modelBuilder.Entity("LightTrailer", b =>
                {
                    b.Property<int>("LightId")
                        .HasColumnType("int");

                    b.Property<int>("TrailerId")
                        .HasColumnType("int");

                    b.HasKey("LightId", "TrailerId");

                    b.HasIndex("TrailerId");

                    b.ToTable("LightTrailer", (string)null);

                    b.HasData(
                        new
                        {
                            LightId = 1,
                            TrailerId = 1
                        },
                        new
                        {
                            LightId = 2,
                            TrailerId = 1
                        },
                        new
                        {
                            LightId = 3,
                            TrailerId = 1
                        },
                        new
                        {
                            LightId = 2,
                            TrailerId = 2
                        },
                        new
                        {
                            LightId = 3,
                            TrailerId = 2
                        },
                        new
                        {
                            LightId = 1,
                            TrailerId = 3
                        },
                        new
                        {
                            LightId = 2,
                            TrailerId = 3
                        },
                        new
                        {
                            LightId = 3,
                            TrailerId = 3
                        },
                        new
                        {
                            LightId = 1,
                            TrailerId = 4
                        },
                        new
                        {
                            LightId = 2,
                            TrailerId = 4
                        },
                        new
                        {
                            LightId = 3,
                            TrailerId = 4
                        },
                        new
                        {
                            LightId = 1,
                            TrailerId = 5
                        },
                        new
                        {
                            LightId = 2,
                            TrailerId = 5
                        },
                        new
                        {
                            LightId = 3,
                            TrailerId = 5
                        },
                        new
                        {
                            LightId = 1,
                            TrailerId = 6
                        },
                        new
                        {
                            LightId = 2,
                            TrailerId = 6
                        },
                        new
                        {
                            LightId = 3,
                            TrailerId = 6
                        },
                        new
                        {
                            LightId = 1,
                            TrailerId = 7
                        },
                        new
                        {
                            LightId = 2,
                            TrailerId = 7
                        },
                        new
                        {
                            LightId = 3,
                            TrailerId = 7
                        },
                        new
                        {
                            LightId = 1,
                            TrailerId = 8
                        },
                        new
                        {
                            LightId = 2,
                            TrailerId = 8
                        },
                        new
                        {
                            LightId = 3,
                            TrailerId = 8
                        },
                        new
                        {
                            LightId = 1,
                            TrailerId = 9
                        },
                        new
                        {
                            LightId = 2,
                            TrailerId = 9
                        },
                        new
                        {
                            LightId = 3,
                            TrailerId = 9
                        },
                        new
                        {
                            LightId = 1,
                            TrailerId = 10
                        },
                        new
                        {
                            LightId = 2,
                            TrailerId = 10
                        },
                        new
                        {
                            LightId = 3,
                            TrailerId = 10
                        },
                        new
                        {
                            LightId = 1,
                            TrailerId = 11
                        },
                        new
                        {
                            LightId = 2,
                            TrailerId = 11
                        },
                        new
                        {
                            LightId = 3,
                            TrailerId = 11
                        });
                });

            modelBuilder.Entity("OilPumpTrailer", b =>
                {
                    b.Property<int>("OilPumpId")
                        .HasColumnType("int");

                    b.Property<int>("TrailerId")
                        .HasColumnType("int");

                    b.HasKey("OilPumpId", "TrailerId");

                    b.HasIndex("TrailerId");

                    b.ToTable("OilPumpTrailer", (string)null);

                    b.HasData(
                        new
                        {
                            OilPumpId = 1,
                            TrailerId = 2
                        },
                        new
                        {
                            OilPumpId = 2,
                            TrailerId = 2
                        },
                        new
                        {
                            OilPumpId = 3,
                            TrailerId = 2
                        },
                        new
                        {
                            OilPumpId = 4,
                            TrailerId = 2
                        },
                        new
                        {
                            OilPumpId = 5,
                            TrailerId = 2
                        },
                        new
                        {
                            OilPumpId = 6,
                            TrailerId = 2
                        },
                        new
                        {
                            OilPumpId = 7,
                            TrailerId = 2
                        },
                        new
                        {
                            OilPumpId = 1,
                            TrailerId = 3
                        },
                        new
                        {
                            OilPumpId = 2,
                            TrailerId = 3
                        },
                        new
                        {
                            OilPumpId = 3,
                            TrailerId = 3
                        },
                        new
                        {
                            OilPumpId = 4,
                            TrailerId = 3
                        },
                        new
                        {
                            OilPumpId = 5,
                            TrailerId = 3
                        },
                        new
                        {
                            OilPumpId = 6,
                            TrailerId = 3
                        },
                        new
                        {
                            OilPumpId = 7,
                            TrailerId = 3
                        },
                        new
                        {
                            OilPumpId = 1,
                            TrailerId = 4
                        },
                        new
                        {
                            OilPumpId = 2,
                            TrailerId = 4
                        },
                        new
                        {
                            OilPumpId = 3,
                            TrailerId = 4
                        },
                        new
                        {
                            OilPumpId = 4,
                            TrailerId = 4
                        },
                        new
                        {
                            OilPumpId = 5,
                            TrailerId = 4
                        },
                        new
                        {
                            OilPumpId = 6,
                            TrailerId = 4
                        },
                        new
                        {
                            OilPumpId = 7,
                            TrailerId = 4
                        },
                        new
                        {
                            OilPumpId = 1,
                            TrailerId = 5
                        },
                        new
                        {
                            OilPumpId = 2,
                            TrailerId = 5
                        },
                        new
                        {
                            OilPumpId = 3,
                            TrailerId = 5
                        },
                        new
                        {
                            OilPumpId = 4,
                            TrailerId = 5
                        },
                        new
                        {
                            OilPumpId = 5,
                            TrailerId = 5
                        },
                        new
                        {
                            OilPumpId = 6,
                            TrailerId = 5
                        },
                        new
                        {
                            OilPumpId = 7,
                            TrailerId = 5
                        },
                        new
                        {
                            OilPumpId = 1,
                            TrailerId = 6
                        },
                        new
                        {
                            OilPumpId = 2,
                            TrailerId = 6
                        },
                        new
                        {
                            OilPumpId = 3,
                            TrailerId = 6
                        },
                        new
                        {
                            OilPumpId = 4,
                            TrailerId = 6
                        },
                        new
                        {
                            OilPumpId = 5,
                            TrailerId = 6
                        },
                        new
                        {
                            OilPumpId = 6,
                            TrailerId = 6
                        },
                        new
                        {
                            OilPumpId = 7,
                            TrailerId = 6
                        },
                        new
                        {
                            OilPumpId = 1,
                            TrailerId = 7
                        },
                        new
                        {
                            OilPumpId = 2,
                            TrailerId = 7
                        },
                        new
                        {
                            OilPumpId = 3,
                            TrailerId = 7
                        },
                        new
                        {
                            OilPumpId = 4,
                            TrailerId = 7
                        },
                        new
                        {
                            OilPumpId = 5,
                            TrailerId = 7
                        },
                        new
                        {
                            OilPumpId = 6,
                            TrailerId = 7
                        },
                        new
                        {
                            OilPumpId = 7,
                            TrailerId = 7
                        },
                        new
                        {
                            OilPumpId = 1,
                            TrailerId = 8
                        },
                        new
                        {
                            OilPumpId = 2,
                            TrailerId = 8
                        },
                        new
                        {
                            OilPumpId = 3,
                            TrailerId = 8
                        },
                        new
                        {
                            OilPumpId = 4,
                            TrailerId = 8
                        },
                        new
                        {
                            OilPumpId = 5,
                            TrailerId = 8
                        },
                        new
                        {
                            OilPumpId = 6,
                            TrailerId = 8
                        },
                        new
                        {
                            OilPumpId = 7,
                            TrailerId = 8
                        },
                        new
                        {
                            OilPumpId = 1,
                            TrailerId = 9
                        },
                        new
                        {
                            OilPumpId = 2,
                            TrailerId = 9
                        },
                        new
                        {
                            OilPumpId = 3,
                            TrailerId = 9
                        },
                        new
                        {
                            OilPumpId = 4,
                            TrailerId = 9
                        },
                        new
                        {
                            OilPumpId = 5,
                            TrailerId = 9
                        },
                        new
                        {
                            OilPumpId = 6,
                            TrailerId = 9
                        },
                        new
                        {
                            OilPumpId = 7,
                            TrailerId = 9
                        },
                        new
                        {
                            OilPumpId = 1,
                            TrailerId = 10
                        },
                        new
                        {
                            OilPumpId = 2,
                            TrailerId = 10
                        },
                        new
                        {
                            OilPumpId = 3,
                            TrailerId = 10
                        },
                        new
                        {
                            OilPumpId = 4,
                            TrailerId = 10
                        },
                        new
                        {
                            OilPumpId = 5,
                            TrailerId = 10
                        },
                        new
                        {
                            OilPumpId = 6,
                            TrailerId = 10
                        },
                        new
                        {
                            OilPumpId = 7,
                            TrailerId = 10
                        },
                        new
                        {
                            OilPumpId = 1,
                            TrailerId = 11
                        },
                        new
                        {
                            OilPumpId = 2,
                            TrailerId = 11
                        },
                        new
                        {
                            OilPumpId = 3,
                            TrailerId = 11
                        },
                        new
                        {
                            OilPumpId = 4,
                            TrailerId = 11
                        },
                        new
                        {
                            OilPumpId = 5,
                            TrailerId = 11
                        },
                        new
                        {
                            OilPumpId = 6,
                            TrailerId = 11
                        },
                        new
                        {
                            OilPumpId = 7,
                            TrailerId = 11
                        });
                });

            modelBuilder.Entity("OilTankTrailer", b =>
                {
                    b.Property<int>("OilTankId")
                        .HasColumnType("int");

                    b.Property<int>("TrailerId")
                        .HasColumnType("int");

                    b.HasKey("OilTankId", "TrailerId");

                    b.HasIndex("TrailerId");

                    b.ToTable("OilTankTrailer", (string)null);

                    b.HasData(
                        new
                        {
                            OilTankId = 1,
                            TrailerId = 2
                        },
                        new
                        {
                            OilTankId = 2,
                            TrailerId = 2
                        },
                        new
                        {
                            OilTankId = 3,
                            TrailerId = 2
                        },
                        new
                        {
                            OilTankId = 4,
                            TrailerId = 2
                        },
                        new
                        {
                            OilTankId = 1,
                            TrailerId = 3
                        },
                        new
                        {
                            OilTankId = 2,
                            TrailerId = 3
                        },
                        new
                        {
                            OilTankId = 3,
                            TrailerId = 3
                        },
                        new
                        {
                            OilTankId = 4,
                            TrailerId = 3
                        },
                        new
                        {
                            OilTankId = 1,
                            TrailerId = 4
                        },
                        new
                        {
                            OilTankId = 2,
                            TrailerId = 4
                        },
                        new
                        {
                            OilTankId = 3,
                            TrailerId = 4
                        },
                        new
                        {
                            OilTankId = 4,
                            TrailerId = 4
                        },
                        new
                        {
                            OilTankId = 1,
                            TrailerId = 5
                        },
                        new
                        {
                            OilTankId = 2,
                            TrailerId = 5
                        },
                        new
                        {
                            OilTankId = 3,
                            TrailerId = 5
                        },
                        new
                        {
                            OilTankId = 4,
                            TrailerId = 5
                        },
                        new
                        {
                            OilTankId = 1,
                            TrailerId = 6
                        },
                        new
                        {
                            OilTankId = 2,
                            TrailerId = 6
                        },
                        new
                        {
                            OilTankId = 3,
                            TrailerId = 6
                        },
                        new
                        {
                            OilTankId = 4,
                            TrailerId = 6
                        },
                        new
                        {
                            OilTankId = 1,
                            TrailerId = 7
                        },
                        new
                        {
                            OilTankId = 2,
                            TrailerId = 7
                        },
                        new
                        {
                            OilTankId = 3,
                            TrailerId = 7
                        },
                        new
                        {
                            OilTankId = 4,
                            TrailerId = 7
                        },
                        new
                        {
                            OilTankId = 1,
                            TrailerId = 8
                        },
                        new
                        {
                            OilTankId = 2,
                            TrailerId = 8
                        },
                        new
                        {
                            OilTankId = 3,
                            TrailerId = 8
                        },
                        new
                        {
                            OilTankId = 4,
                            TrailerId = 8
                        },
                        new
                        {
                            OilTankId = 1,
                            TrailerId = 9
                        },
                        new
                        {
                            OilTankId = 2,
                            TrailerId = 9
                        },
                        new
                        {
                            OilTankId = 3,
                            TrailerId = 9
                        },
                        new
                        {
                            OilTankId = 4,
                            TrailerId = 9
                        },
                        new
                        {
                            OilTankId = 1,
                            TrailerId = 10
                        },
                        new
                        {
                            OilTankId = 2,
                            TrailerId = 10
                        },
                        new
                        {
                            OilTankId = 3,
                            TrailerId = 10
                        },
                        new
                        {
                            OilTankId = 4,
                            TrailerId = 10
                        },
                        new
                        {
                            OilTankId = 1,
                            TrailerId = 11
                        },
                        new
                        {
                            OilTankId = 2,
                            TrailerId = 11
                        },
                        new
                        {
                            OilTankId = 3,
                            TrailerId = 11
                        },
                        new
                        {
                            OilTankId = 4,
                            TrailerId = 11
                        });
                });

            modelBuilder.Entity("PlatformTrailer", b =>
                {
                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.Property<int>("TrailerId")
                        .HasColumnType("int");

                    b.HasKey("PlatformId", "TrailerId");

                    b.HasIndex("TrailerId");

                    b.ToTable("PlatformTrailer", (string)null);

                    b.HasData(
                        new
                        {
                            PlatformId = 1,
                            TrailerId = 1
                        },
                        new
                        {
                            PlatformId = 1,
                            TrailerId = 2
                        },
                        new
                        {
                            PlatformId = 2,
                            TrailerId = 2
                        },
                        new
                        {
                            PlatformId = 1,
                            TrailerId = 3
                        },
                        new
                        {
                            PlatformId = 2,
                            TrailerId = 3
                        },
                        new
                        {
                            PlatformId = 1,
                            TrailerId = 4
                        },
                        new
                        {
                            PlatformId = 2,
                            TrailerId = 4
                        },
                        new
                        {
                            PlatformId = 1,
                            TrailerId = 5
                        },
                        new
                        {
                            PlatformId = 1,
                            TrailerId = 6
                        },
                        new
                        {
                            PlatformId = 1,
                            TrailerId = 7
                        },
                        new
                        {
                            PlatformId = 1,
                            TrailerId = 8
                        },
                        new
                        {
                            PlatformId = 1,
                            TrailerId = 9
                        },
                        new
                        {
                            PlatformId = 1,
                            TrailerId = 10
                        },
                        new
                        {
                            PlatformId = 1,
                            TrailerId = 11
                        });
                });

            modelBuilder.Entity("PropulsionTrailer", b =>
                {
                    b.Property<int>("PropulsionId")
                        .HasColumnType("int");

                    b.Property<int>("TrailerId")
                        .HasColumnType("int");

                    b.HasKey("PropulsionId", "TrailerId");

                    b.HasIndex("TrailerId");

                    b.ToTable("PropulsionTrailer", (string)null);

                    b.HasData(
                        new
                        {
                            PropulsionId = 1,
                            TrailerId = 3
                        },
                        new
                        {
                            PropulsionId = 2,
                            TrailerId = 3
                        },
                        new
                        {
                            PropulsionId = 3,
                            TrailerId = 4
                        },
                        new
                        {
                            PropulsionId = 4,
                            TrailerId = 4
                        },
                        new
                        {
                            PropulsionId = 1,
                            TrailerId = 5
                        },
                        new
                        {
                            PropulsionId = 2,
                            TrailerId = 5
                        },
                        new
                        {
                            PropulsionId = 5,
                            TrailerId = 6
                        },
                        new
                        {
                            PropulsionId = 6,
                            TrailerId = 6
                        },
                        new
                        {
                            PropulsionId = 3,
                            TrailerId = 7
                        },
                        new
                        {
                            PropulsionId = 4,
                            TrailerId = 7
                        },
                        new
                        {
                            PropulsionId = 5,
                            TrailerId = 8
                        },
                        new
                        {
                            PropulsionId = 6,
                            TrailerId = 8
                        },
                        new
                        {
                            PropulsionId = 3,
                            TrailerId = 9
                        },
                        new
                        {
                            PropulsionId = 4,
                            TrailerId = 9
                        },
                        new
                        {
                            PropulsionId = 5,
                            TrailerId = 10
                        },
                        new
                        {
                            PropulsionId = 6,
                            TrailerId = 10
                        },
                        new
                        {
                            PropulsionId = 3,
                            TrailerId = 11
                        },
                        new
                        {
                            PropulsionId = 4,
                            TrailerId = 11
                        });
                });

            modelBuilder.Entity("StanchionTrailer", b =>
                {
                    b.Property<int>("StanchionId")
                        .HasColumnType("int");

                    b.Property<int>("TrailerId")
                        .HasColumnType("int");

                    b.HasKey("StanchionId", "TrailerId");

                    b.HasIndex("TrailerId");

                    b.ToTable("StanchionTrailer", (string)null);

                    b.HasData(
                        new
                        {
                            StanchionId = 1,
                            TrailerId = 1
                        },
                        new
                        {
                            StanchionId = 2,
                            TrailerId = 1
                        },
                        new
                        {
                            StanchionId = 3,
                            TrailerId = 2
                        },
                        new
                        {
                            StanchionId = 4,
                            TrailerId = 2
                        },
                        new
                        {
                            StanchionId = 5,
                            TrailerId = 2
                        },
                        new
                        {
                            StanchionId = 6,
                            TrailerId = 2
                        },
                        new
                        {
                            StanchionId = 7,
                            TrailerId = 3
                        },
                        new
                        {
                            StanchionId = 8,
                            TrailerId = 3
                        },
                        new
                        {
                            StanchionId = 9,
                            TrailerId = 3
                        },
                        new
                        {
                            StanchionId = 10,
                            TrailerId = 3
                        },
                        new
                        {
                            StanchionId = 11,
                            TrailerId = 4
                        },
                        new
                        {
                            StanchionId = 12,
                            TrailerId = 4
                        },
                        new
                        {
                            StanchionId = 13,
                            TrailerId = 4
                        },
                        new
                        {
                            StanchionId = 14,
                            TrailerId = 4
                        },
                        new
                        {
                            StanchionId = 15,
                            TrailerId = 5
                        },
                        new
                        {
                            StanchionId = 16,
                            TrailerId = 5
                        },
                        new
                        {
                            StanchionId = 17,
                            TrailerId = 5
                        },
                        new
                        {
                            StanchionId = 18,
                            TrailerId = 5
                        },
                        new
                        {
                            StanchionId = 19,
                            TrailerId = 6
                        },
                        new
                        {
                            StanchionId = 20,
                            TrailerId = 6
                        },
                        new
                        {
                            StanchionId = 21,
                            TrailerId = 6
                        },
                        new
                        {
                            StanchionId = 22,
                            TrailerId = 6
                        },
                        new
                        {
                            StanchionId = 23,
                            TrailerId = 7
                        },
                        new
                        {
                            StanchionId = 24,
                            TrailerId = 7
                        },
                        new
                        {
                            StanchionId = 25,
                            TrailerId = 7
                        },
                        new
                        {
                            StanchionId = 26,
                            TrailerId = 7
                        },
                        new
                        {
                            StanchionId = 27,
                            TrailerId = 8
                        },
                        new
                        {
                            StanchionId = 28,
                            TrailerId = 8
                        },
                        new
                        {
                            StanchionId = 29,
                            TrailerId = 8
                        },
                        new
                        {
                            StanchionId = 30,
                            TrailerId = 8
                        },
                        new
                        {
                            StanchionId = 31,
                            TrailerId = 9
                        },
                        new
                        {
                            StanchionId = 32,
                            TrailerId = 9
                        },
                        new
                        {
                            StanchionId = 33,
                            TrailerId = 9
                        },
                        new
                        {
                            StanchionId = 34,
                            TrailerId = 9
                        },
                        new
                        {
                            StanchionId = 35,
                            TrailerId = 10
                        },
                        new
                        {
                            StanchionId = 36,
                            TrailerId = 10
                        },
                        new
                        {
                            StanchionId = 37,
                            TrailerId = 10
                        },
                        new
                        {
                            StanchionId = 38,
                            TrailerId = 10
                        },
                        new
                        {
                            StanchionId = 39,
                            TrailerId = 11
                        },
                        new
                        {
                            StanchionId = 40,
                            TrailerId = 11
                        },
                        new
                        {
                            StanchionId = 41,
                            TrailerId = 11
                        },
                        new
                        {
                            StanchionId = 42,
                            TrailerId = 11
                        });
                });

            modelBuilder.Entity("SupportLegTrailer", b =>
                {
                    b.Property<int>("SupportLegId")
                        .HasColumnType("int");

                    b.Property<int>("TrailerId")
                        .HasColumnType("int");

                    b.HasKey("SupportLegId", "TrailerId");

                    b.HasIndex("TrailerId");

                    b.ToTable("SupportLegTrailer", (string)null);

                    b.HasData(
                        new
                        {
                            SupportLegId = 1,
                            TrailerId = 1
                        },
                        new
                        {
                            SupportLegId = 2,
                            TrailerId = 2
                        },
                        new
                        {
                            SupportLegId = 3,
                            TrailerId = 2
                        },
                        new
                        {
                            SupportLegId = 2,
                            TrailerId = 3
                        },
                        new
                        {
                            SupportLegId = 3,
                            TrailerId = 3
                        },
                        new
                        {
                            SupportLegId = 2,
                            TrailerId = 4
                        },
                        new
                        {
                            SupportLegId = 3,
                            TrailerId = 4
                        },
                        new
                        {
                            SupportLegId = 2,
                            TrailerId = 5
                        },
                        new
                        {
                            SupportLegId = 3,
                            TrailerId = 5
                        },
                        new
                        {
                            SupportLegId = 2,
                            TrailerId = 6
                        },
                        new
                        {
                            SupportLegId = 3,
                            TrailerId = 6
                        },
                        new
                        {
                            SupportLegId = 2,
                            TrailerId = 7
                        },
                        new
                        {
                            SupportLegId = 3,
                            TrailerId = 7
                        },
                        new
                        {
                            SupportLegId = 2,
                            TrailerId = 8
                        },
                        new
                        {
                            SupportLegId = 3,
                            TrailerId = 8
                        },
                        new
                        {
                            SupportLegId = 2,
                            TrailerId = 9
                        },
                        new
                        {
                            SupportLegId = 3,
                            TrailerId = 9
                        },
                        new
                        {
                            SupportLegId = 2,
                            TrailerId = 10
                        },
                        new
                        {
                            SupportLegId = 3,
                            TrailerId = 10
                        },
                        new
                        {
                            SupportLegId = 2,
                            TrailerId = 11
                        },
                        new
                        {
                            SupportLegId = 3,
                            TrailerId = 11
                        });
                });

            modelBuilder.Entity("TrailerTyre", b =>
                {
                    b.Property<int>("TrailerId")
                        .HasColumnType("int");

                    b.Property<int>("TyreId")
                        .HasColumnType("int");

                    b.HasKey("TrailerId", "TyreId");

                    b.HasIndex("TyreId");

                    b.ToTable("TyreTrailer", (string)null);

                    b.HasData(
                        new
                        {
                            TrailerId = 1,
                            TyreId = 1
                        },
                        new
                        {
                            TrailerId = 1,
                            TyreId = 2
                        },
                        new
                        {
                            TrailerId = 2,
                            TyreId = 1
                        },
                        new
                        {
                            TrailerId = 2,
                            TyreId = 2
                        },
                        new
                        {
                            TrailerId = 2,
                            TyreId = 3
                        },
                        new
                        {
                            TrailerId = 3,
                            TyreId = 1
                        },
                        new
                        {
                            TrailerId = 3,
                            TyreId = 2
                        },
                        new
                        {
                            TrailerId = 3,
                            TyreId = 3
                        },
                        new
                        {
                            TrailerId = 3,
                            TyreId = 5
                        },
                        new
                        {
                            TrailerId = 3,
                            TyreId = 8
                        });
                });

            modelBuilder.Entity("BrakeTrailer", b =>
                {
                    b.HasOne("CalcAppAPI.Models.Machine.Configurations.Trailers.Brake", null)
                        .WithMany()
                        .HasForeignKey("BrakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalcAppAPI.Models.Trailer", null)
                        .WithMany()
                        .HasForeignKey("TrailerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.OilTank", b =>
                {
                    b.HasOne("CalcAppAPI.Models.Machine.Configurations.Trailers.OilTankCooler", "OilTankCooler")
                        .WithMany("OilTank")
                        .HasForeignKey("OilTankCoolerId");

                    b.Navigation("OilTankCooler");
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.TrailerCraneConfiguration", b =>
                {
                    b.HasOne("CalcAppAPI.Models.Crane", "Crane")
                        .WithMany("TrailerConfigurations")
                        .HasForeignKey("CraneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalcAppAPI.Models.Machine.Configurations.Cranes.FrameType", "SelectedFrameType")
                        .WithMany()
                        .HasForeignKey("SelectedFrameTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalcAppAPI.Models.Trailer", "Trailer")
                        .WithMany("CraneConfigurations")
                        .HasForeignKey("TrailerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crane");

                    b.Navigation("SelectedFrameType");

                    b.Navigation("Trailer");
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.TrailerFrameTypeConfiguration", b =>
                {
                    b.HasOne("CalcAppAPI.Models.Machine.Configurations.Cranes.FrameType", "FrameType")
                        .WithMany("TrailerConfigurations")
                        .HasForeignKey("FrameTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalcAppAPI.Models.Trailer", "Trailer")
                        .WithMany()
                        .HasForeignKey("TrailerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FrameType");

                    b.Navigation("Trailer");
                });

            modelBuilder.Entity("CalcAppAPI.Models.Trailer", b =>
                {
                    b.HasOne("CalcAppAPI.Models.Machine.Configurations.Trailers.BBox", "BBox")
                        .WithMany("Trailer")
                        .HasForeignKey("BBoxId");

                    b.HasOne("CalcAppAPI.Models.Machine.Configurations.Trailers.BolsterLock", "BolsterLock")
                        .WithMany("Trailer")
                        .HasForeignKey("BolsterLockId");

                    b.HasOne("CalcAppAPI.Models.Machine.Configurations.Trailers.ChainsawHolder", "ChainsawHolder")
                        .WithMany("Trailer")
                        .HasForeignKey("ChainsawHolderId");

                    b.HasOne("CalcAppAPI.Models.Machine.Configurations.Trailers.HandBrake", "HandBrake")
                        .WithMany("Trailer")
                        .HasForeignKey("HandBrakeId");

                    b.HasOne("CalcAppAPI.Models.Machine.Configurations.Trailers.UnderrunProtection", "UnderrunProtection")
                        .WithMany("Trailer")
                        .HasForeignKey("UnderrunProtectionId");

                    b.HasOne("CalcAppAPI.Models.Machine.Configurations.Trailers.WoodSorter", "WoodSorter")
                        .WithMany("Trailer")
                        .HasForeignKey("WoodSorterId");

                    b.Navigation("BBox");

                    b.Navigation("BolsterLock");

                    b.Navigation("ChainsawHolder");

                    b.Navigation("HandBrake");

                    b.Navigation("UnderrunProtection");

                    b.Navigation("WoodSorter");
                });

            modelBuilder.Entity("CraneTrailer", b =>
                {
                    b.HasOne("CalcAppAPI.Models.Crane", null)
                        .WithMany()
                        .HasForeignKey("CraneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalcAppAPI.Models.Trailer", null)
                        .WithMany()
                        .HasForeignKey("TrailerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DrawbarTrailer", b =>
                {
                    b.HasOne("CalcAppAPI.Models.Machine.Configurations.Trailers.Drawbar", null)
                        .WithMany()
                        .HasForeignKey("DrawbarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalcAppAPI.Models.Trailer", null)
                        .WithMany()
                        .HasForeignKey("TrailerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LightTrailer", b =>
                {
                    b.HasOne("CalcAppAPI.Models.Machine.Configurations.Trailers.Light", null)
                        .WithMany()
                        .HasForeignKey("LightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalcAppAPI.Models.Trailer", null)
                        .WithMany()
                        .HasForeignKey("TrailerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OilPumpTrailer", b =>
                {
                    b.HasOne("CalcAppAPI.Models.Machine.Configurations.Trailers.OilPump", null)
                        .WithMany()
                        .HasForeignKey("OilPumpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalcAppAPI.Models.Trailer", null)
                        .WithMany()
                        .HasForeignKey("TrailerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OilTankTrailer", b =>
                {
                    b.HasOne("CalcAppAPI.Models.Machine.Configurations.Trailers.OilTank", null)
                        .WithMany()
                        .HasForeignKey("OilTankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalcAppAPI.Models.Trailer", null)
                        .WithMany()
                        .HasForeignKey("TrailerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlatformTrailer", b =>
                {
                    b.HasOne("CalcAppAPI.Models.Machine.Configurations.Trailers.Platform", null)
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalcAppAPI.Models.Trailer", null)
                        .WithMany()
                        .HasForeignKey("TrailerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PropulsionTrailer", b =>
                {
                    b.HasOne("CalcAppAPI.Models.Machine.Configurations.Trailers.Propulsion", null)
                        .WithMany()
                        .HasForeignKey("PropulsionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalcAppAPI.Models.Trailer", null)
                        .WithMany()
                        .HasForeignKey("TrailerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StanchionTrailer", b =>
                {
                    b.HasOne("CalcAppAPI.Models.Machine.Configurations.Trailers.Stanchion", null)
                        .WithMany()
                        .HasForeignKey("StanchionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalcAppAPI.Models.Trailer", null)
                        .WithMany()
                        .HasForeignKey("TrailerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SupportLegTrailer", b =>
                {
                    b.HasOne("CalcAppAPI.Models.Machine.Configurations.Trailers.SupportLeg", null)
                        .WithMany()
                        .HasForeignKey("SupportLegId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalcAppAPI.Models.Trailer", null)
                        .WithMany()
                        .HasForeignKey("TrailerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrailerTyre", b =>
                {
                    b.HasOne("CalcAppAPI.Models.Trailer", null)
                        .WithMany()
                        .HasForeignKey("TrailerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalcAppAPI.Models.Machine.Configurations.Trailers.Tyre", null)
                        .WithMany()
                        .HasForeignKey("TyreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CalcAppAPI.Models.Crane", b =>
                {
                    b.Navigation("TrailerConfigurations");
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Cranes.FrameType", b =>
                {
                    b.Navigation("TrailerConfigurations");
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.BBox", b =>
                {
                    b.Navigation("Trailer");
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.BolsterLock", b =>
                {
                    b.Navigation("Trailer");
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.ChainsawHolder", b =>
                {
                    b.Navigation("Trailer");
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.HandBrake", b =>
                {
                    b.Navigation("Trailer");
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.OilTankCooler", b =>
                {
                    b.Navigation("OilTank");
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.UnderrunProtection", b =>
                {
                    b.Navigation("Trailer");
                });

            modelBuilder.Entity("CalcAppAPI.Models.Machine.Configurations.Trailers.WoodSorter", b =>
                {
                    b.Navigation("Trailer");
                });

            modelBuilder.Entity("CalcAppAPI.Models.Trailer", b =>
                {
                    b.Navigation("CraneConfigurations");
                });
#pragma warning restore 612, 618
        }
    }
}
